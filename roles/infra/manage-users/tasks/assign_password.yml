- name: Проверка, можно ли задать пароль (shell != /bin/false)
  debug:
    msg: "Пароль можно задать для {{ item.name }}"
  when: item.shell != '/bin/false'

- name: Запрос на установку пароля при создании учётки {{ item.name }}
  pause:
    prompt: "Хотите задать пароль для пользователя {{ item.name }}? (y/N):"
  register: password_prompt
  delegate_to: localhost
  run_once: true
  when: item.shell != '/bin/false'

- name: Ввод пароля для пользователя {{ item.name }}
  pause:
    prompt: "Введите пароль для {{ item.name }} (ввод скрыт):"
    echo: no
  register: user_password
  delegate_to: localhost
  run_once: true
  when:
    - item.shell != '/bin/false'
    - password_prompt is defined
    - password_prompt.user_input is defined
    - password_prompt.user_input | lower == 'y'

- name: Установить переменную пароля {{ item.name }}
  set_fact:
    user_password_map: "{{ user_password_map | default({}) | combine({ item.name: user_password.user_input | password_hash('sha512') }) }}"
  when:
    - item.shell != '/bin/false'
    - password_prompt is defined
    - password_prompt.user_input is defined
    - password_prompt.user_input | lower == 'y'
    - user_password is defined
    - user_password.user_input | length > 0
  delegate_to: localhost
  run_once: true

- name: Назначить пароль для {{ item.name }}
  user:
    name: "{{ item.name }}"
    password: "{{ user_password_map[item.name] }}"
  when:
    - item.shell != '/bin/false'
    - user_password_map is defined
    - item.name in user_password_map
    - item.state | default('present') == 'present'
    - item.manage_existing | default(false) or not item.manage_existing | default(false)
    - user_exists | default(false)
