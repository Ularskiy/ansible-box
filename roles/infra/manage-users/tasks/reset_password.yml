- name: Проверка, существует ли пользователь {{ item.name }}
  getent:
    database: passwd
    key: "{{ item.name }}"
  register: user_check
  failed_when: false
  changed_when: false

- name: Установить факт user_exists
  set_fact:
    user_exists: "{{ user_check.ansible_facts.getent_passwd[item.name] is defined }}"

- name: Пропуск — пользователь {{ item.name }} не найден
  debug:
    msg: "Пользователь {{ item.name }} не найден на этом хосте"
  when: not user_exists

- name: Сброс пароля для {{ item.name }}
  when: user_exists
  block:

    - name: Ввести новый пароль для {{ item.name }} (первый ввод)
      pause:
        prompt: "Введите новый пароль для {{ item.name }} (ввод отображается):"
        echo: yes
      register: first_password_input
      delegate_to: localhost
      run_once: true

    - name: Повторите пароль для {{ item.name }}
      pause:
        prompt: "Повторите новый пароль для {{ item.name }}:"
        echo: yes
      register: second_password_input
      delegate_to: localhost
      run_once: true

    - name: Проверка совпадения паролей
      fail:
        msg: " Пароли не совпадают. Повторите попытку."
      when: first_password_input.user_input != second_password_input.user_input
      delegate_to: localhost
      run_once: true

    - name: Хешировать пароль
      set_fact:
        user_password_map: "{{ user_password_map | default({}) | combine({ item.name: first_password_input.user_input | password_hash('sha512') }) }}"
      delegate_to: localhost
      run_once: true

    - name: Установить новый пароль пользователю {{ item.name }}
      user:
        name: "{{ item.name }}"
        password: "{{ user_password_map[item.name] }}"
        update_password: always
