- name: Определить путь к .bashrc пользователя подключения
  ansible.builtin.set_fact:
    fix_repository_user_bashrc: >-
      {{
        ansible_user == 'root'
        | ternary('/root/.bashrc', '/home/' ~ ansible_user ~ '/.bashrc')
      }}

- name: Добавить переменные прокси в .bashrc пользователя подключения
  ansible.builtin.blockinfile:
    path: "{{ fix_repository_user_bashrc }}"
    marker: "{{ fix_repository_bashrc_proxy_block_marker }}"
    block: |
      export http_proxy="http://{{ fix_repository_proxy_host }}:{{ fix_repository_proxy_port }}"
      export https_proxy="http://{{ fix_repository_proxy_host }}:{{ fix_repository_proxy_port }}"
  become: true
  become_user: "{{ ansible_user }}"

- name: Убедиться, что в squid.conf есть include-директива
  ansible.builtin.lineinfile:
    path: "/etc/squid/squid.conf"
    line: "{{ fix_repository_squid_conf_include_directive }}"
    state: present
  become: true

- name: Получить IP текущего хоста
  ansible.builtin.set_fact:
    fix_repository_current_ip: "{{ ansible_default_ipv4.address }}"

- name: Добавить ACL для текущего хоста в конфигурацию Squid
  ansible.builtin.lineinfile:
    path: "{{ fix_repository_squid_conf_path }}"
    line: "acl allowed_hosts src {{ fix_repository_current_ip }}"
    insertafter: EOF
    state: present
  become: true
  when: not fix_repository_delete_proxy_acl_entry

- name: Разрешить доступ ACL в конфигурации Squid
  ansible.builtin.lineinfile:
    path: "{{ fix_repository_squid_conf_path }}"
    line: "http_access allow allowed_hosts"
    insertafter: EOF
    state: present
  become: true
  when: not fix_repository_delete_proxy_acl_entry

- name: Удалить ACL и правила доступа из конфигурации Squid (если указано)
  ansible.builtin.lineinfile:
    path: "{{ fix_repository_squid_conf_path }}"
    regexp: "^(acl allowed_hosts src {{ fix_repository_current_ip }}|http_access allow allowed_hosts)"
    state: absent
  become: true
  when: fix_repository_delete_proxy_acl_entry

- name: Перезапустить Squid
  ansible.builtin.service:
    name: "{{ fix_repository_squid_service_name }}"
    state: restarted
  become: true

- name: Проверка подключения через прокси
  ansible.builtin.command: >
    curl -s -x http://{{ fix_repository_proxy_host }}:{{ fix_repository_proxy_port }} http://google.com
  register: proxy_curl_test
  failed_when: proxy_curl_test.rc != 0
  changed_when: false

- name: Установить APT proxy-конфиг (если включено)
  ansible.builtin.copy:
    content: "{{ fix_repository_template_apt_proxy }}"
    dest: /etc/apt/apt.conf.d/95proxy
    mode: '0644'
  when:
    - fix_repository_enable_apt_proxy_conf
    - ansible_os_family == "Debian"

- name: Добавить proxy в yum.conf (если включено)
  ansible.builtin.lineinfile:
    path: /etc/yum.conf
    regexp: "^proxy="
    line: "{{ fix_repository_template_yum_proxy }}"
    state: present
  when:
    - fix_repository_enable_yum_proxy_conf
    - ansible_os_family == "RedHat"

