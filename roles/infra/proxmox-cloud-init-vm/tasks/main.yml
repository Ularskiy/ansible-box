- name: Проверка переменной vm_list
  assert:
    that:
      - vm_list is defined
      - vm_list | length > 0
    fail_msg: "vm_list не задан или пуст!"
  tags: [validate]

- name: Валидация узла
  import_tasks: validate_node.yml
  tags: [validate]

- name: Проверка существующих ВМ
  import_tasks: check_vm_exists.yml
  tags: [check, clone, delete]

- name: Debug — вывод статуса существования ВМ
  debug:
    msg: >
      ВМ {{ item.name }} (ID {{ item.id }}): {{
        'существует' if check_vm_result.results[loop.index0].status == 200 else 'не существует'
      }}
  loop: "{{ vm_list }}"
  tags: [check, clone, delete]

- name: Удалить ВМ
  import_tasks: delete.yml
  when:
    - item.state == 'absent'
    - check_vm_result.results is defined
    - check_vm_result.results[loop.index0].status == 200
  tags: [delete]

- name: Клонировать ВМ
  import_tasks: clone.yml
  when:
    - item.state in ['present', 'started']
    - check_vm_result.results is defined
    - check_vm_result.results[loop.index0].status == 404
  tags: [clone]

- name: Debug — ВМ уже существует, пропускаем клонирование
  debug:
    msg: "Пропущено: ВМ {{ item.name }} уже существует (ID {{ item.id }})"
  loop: "{{ vm_list }}"
  when:
    - item.state in ['present', 'started']
    - check_vm_result.results is defined
    - check_vm_result.results[loop.index0].status == 200
  tags: [clone]

- name: Подождать снятие lock
  import_tasks: wait_unlock.yml
  when: item.state in ['present', 'started']
  tags: [wait, clone]

- name: Настроить параметры Cloud-Init
  import_tasks: cloud_init.yml
  when: item.state in ['present', 'started']
  tags: [cloud_init]

- name: Запустить ВМ
  import_tasks: start.yml
  when: item.state == 'started'
  tags: [start]

- name: Остановить ВМ
  import_tasks: stop.yml
  when: item.state == 'stopped'
  tags: [stop]

- name: Сделать снапшот
  import_tasks: snapshot.yml
  when: item.state == 'snapshot'
  tags: [snapshot]

- name: Сделать бэкап
  import_tasks: backup.yml
  when: item.state == 'backup'
  tags: [backup]

